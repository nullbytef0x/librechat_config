# For more information, see the Configuration Guide:
# https://www.librechat.ai/docs/configuration/librechat_yaml

# Configuration version (required)
version: 1.2.1

# Cache settings: Set to true to enable caching
cache: true

# Custom interface configuration
interface:

  endpointsMenu: true
  modelSelect: true
  parameters: true
  sidePanel: true
  presets: true
  prompts: true
  bookmarks: true
  multiConvo: true
  agents: true

# Example Registration Object Structure (optional)
registration:
  socialLogins: ['github', 'google', 'discord', 'openid', 'facebook']
  # allowedDomains:
  # - "gmail.com"

# speech:
  tts:
     openai:
       url: 'https://api.electronhub.top/v1/audio/speech'
       apiKey: '${TTS_API_KEY}'
       model: 'elevenlabs'
       voices: ['Alice']

#  
  stt:
     openai:
       url: 'https://api.electronhub.top/v1/audio/translations'
       apiKey: '${TTS_API_KEY}'
       model: 'whisper-large-v3'

rateLimits:
   fileUploads:
     ipMax: 100
     ipWindowInMinutes: 60  # Rate limit window for file uploads per IP
     userMax: 50
     userWindowInMinutes: 60  # Rate limit window for file uploads per user
   conversationsImport:
     ipMax: 100
     ipWindowInMinutes: 60  # Rate limit window for conversation imports per IP
     userMax: 50
     userWindowInMinutes: 60  # Rate limit window for conversation imports per user

# Example Actions Object Structure
actions:
  allowedDomains:
    - "swapi.dev"
    - "librechat.ai"
    - "google.com"

# Example MCP Servers Object Structure
mcpServers: 
  filesystem: {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/app/api"
      ],
      "timeout": 60000
    }
  mcp-hfspace: {
      "command": "npx",
      "args": [
        "-y",
        "@llmindset/mcp-hfspace",
        "styletts2/styletts2",
        "Qwen/Qwen2.5-72B-Instruct",
        "Qwen/Qwen2-72B-Instruct",      
        "Qwen/QVQ-72B-preview",
        "Qwen/Qwen2.5-72B-Instruct",
        "evalstate/FLUX.1-schnell",
        "hf-audio/whisper-large-v3",
        "shuttleai/shuttle-3.1-aesthetic",
        "huggingchat/document-parser",
        "evalstate/Sound-AI-SFX",
        "styletts2/styletts2",
        "dbaranchuk/Switti",
        "--work-dir=/app/api",
        "prithivMLmods/Mistral-7B-Instruct-v0.3"
      ],
      "timeout": 60000
    }
  memory: {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-memory"],
      "timeout": 60000
    }
  sequential-thinking: {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sequential-thinking"
      ],
      "timeout": 60000
    }


# Definition of custom endpoints
endpoints:
  # assistants:
  #   disableBuilder: false # Disable Assistants Builder Interface by setting to `true`
  #   pollIntervalMs: 3000  # Polling interval for checking assistant updates
  #   timeoutMs: 180000  # Timeout for assistant operations
  #   # Should only be one or the other, either `supportedIds` or `excludedIds`
  #   supportedIds: ["asst_supportedAssistantId1", "asst_supportedAssistantId2"]
  #   # excludedIds: ["asst_excludedAssistantId"]
  #   Only show assistants that the user created or that were created externally (e.g. in Assistants playground).
  #   # privateAssistants: false # Does not work with `supportedIds` or `excludedIds`
  #   # (optional) Models that support retrieval, will default to latest known OpenAI models that support the feature
  #   retrievalModels: ["gpt-4-turbo-preview"]
  #   # (optional) Assistant Capabilities available to all users. Omit the ones you wish to exclude. Defaults to list below.
  #   capabilities: ["code_interpreter", "retrieval", "actions", "tools", "image_vision"]
   agents:
  #   (optional) Maximum recursion depth for agents, defaults to 25
     recursionLimit: 50
  #   (optional) Disable the builder interface for agents
     disableBuilder: false
  #   (optional) Agent Capabilities available to all users. Omit the ones you wish to exclude. Defaults to list below.
     capabilities: ["file_search", "actions", "tools"]
   azureOpenAI:
      titleModel: "gpt-4-turbo"
      assistants: true
      plugins: false
      groups:
        - group: "my-westus" # arbitrary name
          apiKey: "${EASTUS_API_KEY}"
          assistants: true
          instanceName: "startupai" # name of the resource group or instance
          version: "2024-05-01-preview"
          models:
            gpt-4o:
              deploymentName: gpt-4o

   azureAssistants:
      disableBuilder: false
      capabilities: ["code_interpreter", "retrieval", "actions", "tools", "image_vision"]
      retrievalModels: ["gpt-4o"]
      timeoutMs: 180000
      
   custom:
    # OpenRouter Example
    - name: 'OpenRouter'
      # For `apiKey` and `baseURL`, you can use environment variables that you define.
      # recommended environment variables:
      # Known issue: you should not use `OPENROUTER_API_KEY` as it will then override the `openAI` endpoint to use OpenRouter as well.
      apiKey: '${OPENROUTER_KEY}'
      baseURL: 'https://openrouter.ai/api/v1'
      models:
        default: ['meta-llama/llama-3-70b-instruct']
        fetch: true
      titleConvo: true
      titleModel: 'meta-llama/llama-3-70b-instruct'
      # Recommended: Drop the stop parameter from the request as Openrouter models use a variety of stop tokens.
      dropParams: ['stop']
      modelDisplayLabel: 'OpenRouter'
      
    # Portkey AI Example
    - name: "Portkey"
      apiKey: "dummy"  
      baseURL: 'https://api.portkey.ai/v1'
      headers:
          x-portkey-api-key: '${PORTKEY_API_KEY}'
          x-portkey-virtual-key: '${PORTKEY_OPENAI_VIRTUAL_KEY}'
      models:
          default: ['gpt-4o-mini', 'gpt-4o', 'chatgpt-4o-latest']
          fetch: true
      titleConvo: true
      titleModel: 'current_model'
      summarize: false
      summaryModel: 'current_model'
      forcePrompt: false
      modelDisplayLabel: 'Portkey'
      iconURL: https://images.crunchbase.com/image/upload/c_pad,f_auto,q_auto:eco,dpr_1/rjqy7ghvjoiu4cd1xjbf
    
    # Perplexity
    - name: "Perplexity"
      apiKey: "${fresed_API_KEY}"
      baseURL: "https://fresedgpt.space/v1/chat/completions"
      models:
        default: [
          "claude-3-haiku-20240307",
          "claude-3-5-haiku-20241022",
          "claude-3-sonnet-20240229",
          "claude-3-5-sonnet-20240620",
          "claude-3-5-sonnet-20241022",
          "claude-3-opus-20240229",
          ]
        fetch: false # fetching list of models is not supported
      titleConvo: true
      titleModel: "claude-3-haiku-20240307"
      summarize: false
      summaryModel: "claude-3-haiku-20240307"
      forcePrompt: false
      dropParams: ["role", "content"]
      modelDisplayLabel: "Perplexity"
      iconURL: "https://raw.githubusercontent.com/Shootmir/skill-icons/refs/heads/main/icons/ActivityPub-Dark.svg"

    # zukijourney API
    - name: "ZukiJourney"
      apiKey: "${zuki_API_KEY}"
      baseURL: "https://api.zukijourney.com/v1"
      models:
        default: [
          "learnlm-1.5-pro-experimental", 
          "mistral-large",
          "codestral",
          "gemma-2-27b",
          "gemma-2-9b",
          "deepseek-coder-6.7b-base",
          "hermes-2-pro-mistral-7b",
          "grok-2",
          "YandexGPT-4-Pro",
          "falcon-7b-instruct",
          "llama-3.3-70b-instruct",
          "euryale-70b",
          "deepseek-coder",
          "llama-3.1-nemotron-70b-instruct",
          ]
        fetch: true
      titleConvo: true
      titleModel: "gpt-3.5-turbo"
      summarize: false
      summaryModel: "gpt-3.5-turbo"
      forcePrompt: false
      modelDisplayLabel: "ShuttleAI"
      dropParams: ["user"]
      iconURL: "https://raw.githubusercontent.com/Shootmir/skill-icons/refs/heads/main/icons/Anaconda-Dark.svg"

    # Fresed API
    - name: "FresedGPT"
      apiKey: "${fresed_API_KEY}"
      baseURL: "https://fresedgpt.space/v1/chat/completions"
      models:
        default: [
          "gpt-4-turbo-2024-04-09",
          "chatgpt-4o-latest",
          "gpt-4o",
          "gpt-4o-2024-11-20",
          "o1-preview",
          "o1-preview-2024-09-12",
          "blackbox-ai",
          "llama-3.1-405b",
          "llama-3.1-sonar-large-128k-online",
          "jamba-1.5-large",
          "jamba-1.5-mini",
          "gemini-exp-1206",
          "gemini-1.5-pro",
          "gemini-1.5-flash-latest",
          ]
        fetch: false
      titleConvo: true
      titleModel: "chatgpt-4o-latest"
      summarize: true
      summaryModel: "chatgpt-4o-latest"
      forcePrompt: false
      modelDisplayLabel: "FresedGPT"
      dropParams: ["user"]
      iconURL: "https://raw.githubusercontent.com/Shootmir/skill-icons/refs/heads/main/icons/NestJS-Dark.svg"
      
    # electronhub API
    - name: "Electronhub"
      apiKey: "${electronhub_API_KEY}"
      baseURL: "https://api.electronhub.top/v1/chat/completions"
      models:
        default: [
          "gpt-3.5-turbo",
          "gpt-4o",
          "gpt-4o-2024-11-20",
          "chatgpt-4o-latest",
          "o1-preview",
          "o1",
          "o1-preview",
          "llama-3.1-405b",
          "llama-3.1-sonar-large-128k-online",
          "jamba-1.5-large",
          "jamba-1.5-mini",
          "gemini-exp-1206",
          "gemini-1.5-pro",
          "claude-3-opus-20240229",
          "claude-3-sonnet-20240229",
          "claude-3-haiku-20240307",
          "claude-3-5-sonnet-20241022",
          "claude-3-5-haiku-20241022",
          "gemini-1.5-pro-exp",
          "gemini-1.5-flash",
          "gemini-1.5-flash-exp",
          "gemini-2.0-flash-exp",
          "gemini-2.0-flash-thinking-exp",
          "gemini-2.0-flash-thinking-exp-1219",
          "llama-3.1-nemotron-70b-instruct",
          "deepseek-coder",
          "codestral-mamba",
          "codestral-latest",
          "grok-2",
          "grok-2-vision-1212",
          "phi-3-medium-128k-instruct",
          "jamba-1.5-large",
          "jamba-1.5-mini",
          "jamba-instruct",
          "qwen-2.5-7b-instruct",
          "nova-lite-v1",
          "nova-pro-v1",
          ]
        fetch: false
      titleConvo: true
      titleModel: "gpt-3.5-turbo"
      summarize: true
      summaryModel: "gpt-3.5-turbo"
      forcePrompt: false
      modelDisplayLabel:  "ElectronHub"
      dropParams: ["user"]
      iconURL: "https://raw.githubusercontent.com/tandpfun/skill-icons/refs/heads/main/icons/NestJS-Dark.svg"

    # Kraken AI
    - name: "KrakenAI"
      apiKey: "${kraken_API_KEY}"
      baseURL: "https://api.cracked.systems/v1/"
      models:
        default: [
          "gemini-1.5-flash-latest",
          "gpt-4o",
          "o1",
          "claude-3.5-sonnet",
          "claude-3-haiku",
          "grok-beta",
          "pplx-pro",
          "pplx-turbo",
          "llama-3.1-405b",
          ]
        fetch: false
      titleConvo: true
      titleModel: "chatgpt-4o-latest"
      summarize: true
      summaryModel: "chatgpt-4o-latest"
      forcePrompt: false
      modelDisplayLabel: "KrakenAI"
      dropParams: ["user"]
      iconURL: "https://raw.githubusercontent.com/Shootmir/skill-icons/refs/heads/main/icons/Workers-Dark.svg"

fileConfig:
   endpoints:
     assistants:
       fileLimit: 5
       fileSizeLimit: 100  # Maximum size for an individual file in MB
       totalSizeLimit: 500  # Maximum total size for all files in a single request in MB
       supportedMimeTypes:
         - "image/.*"
         - "application/pdf"
         - "text/x-c"
         - "text/x-c++"
         - "text/x-csharp"
         - "text/css"
         - "application/msword"
         - "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
         - "text/x-golang"
         - "text/html"
         - "text/x-java"
         - "text/javascript"
         - "application/json"
         - "text/markdown"
         - "text/x-php"
         - "application/vnd.openxmlformats-officedocument.presentationml.presentation"
         - "text/x-python"
         - "text/x-script.python"
         - "text/x-ruby"
         - "application/x-sh"
         - "text/x-tex"
         - "application/typescript"
         - "text/plain"
     openAI:
       fileSizeLimit: 100  # Maximum size for an individual file in MB
       totalSizeLimit: 500  # Maximum total size for all files in a single request in MB
       disabled: false  # Disables file uploading to the OpenAI endpoint
       supportedMimeTypes:
         - "image/.*"
         - "application/pdf"
         - "text/x-c"
         - "text/x-c++"
         - "text/x-csharp"
         - "text/css"
         - "application/msword"
         - "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
         - "text/x-golang"
         - "text/html"
         - "text/x-java"
         - "text/javascript"
         - "application/json"
         - "text/markdown"
         - "text/x-php"
         - "application/vnd.openxmlformats-officedocument.presentationml.presentation"
         - "text/x-python"
         - "text/x-script.python"
         - "text/x-ruby"
         - "application/x-sh"
         - "text/x-tex"
         - "application/typescript"
         - "text/plain"
     default:
       totalSizeLimit: 100
       supportedMimeTypes:
         - "image/.*"
         - "application/pdf"
         - "text/x-c"
         - "text/x-c++"
         - "text/x-csharp"
         - "text/css"
         - "application/msword"
         - "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
         - "text/x-golang"
         - "text/html"
         - "text/x-java"
         - "text/javascript"
         - "application/json"
         - "text/markdown"
         - "text/x-php"
         - "application/vnd.openxmlformats-officedocument.presentationml.presentation"
         - "text/x-python"
         - "text/x-script.python"
         - "text/x-ruby"
         - "application/x-sh"
         - "text/x-tex"
         - "application/typescript"
         - "text/plain"
     google:
       fileLimit: 50
       fileSizeLimit: 100
   serverFileSizeLimit: 100  # Global server file size limit in MB
   avatarSizeLimit: 2  # Limit for user avatar image size in MB
# See the Custom Configuration Guide for more information on Assistants Config:
# https://www.librechat.ai/docs/configuration/librechat_yaml/object_structure/assistants_endpoint

